---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: compositealarms.cloudwatch.services.k8s.aws
spec:
  group: cloudwatch.services.k8s.aws
  names:
    kind: CompositeAlarm
    listKind: CompositeAlarmList
    plural: compositealarms
    singular: compositealarm
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CompositeAlarm is the Schema for the CompositeAlarms API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: "CompositeAlarmSpec defines the desired state of CompositeAlarm.
              \n The details about a composite alarm."
            properties:
              actionsEnabled:
                description: Indicates whether actions should be executed during any
                  changes to the alarm state of the composite alarm. The default is
                  TRUE.
                type: boolean
              actionsSuppressor:
                description: Actions will be suppressed if the suppressor alarm is
                  in the ALARM state. ActionsSuppressor can be an AlarmName or an
                  Amazon Resource Name (ARN) from an existing alarm.
                type: string
              actionsSuppressorExtensionPeriod:
                description: "The maximum time in seconds that the composite alarm
                  waits after suppressor alarm goes out of the ALARM state. After
                  this time, the composite alarm performs its actions. \n ExtensionPeriod
                  is required only when ActionsSuppressor is specified."
                format: int64
                type: integer
              actionsSuppressorWaitPeriod:
                description: "The maximum time in seconds that the composite alarm
                  waits for the suppressor alarm to go into the ALARM state. After
                  this time, the composite alarm performs its actions. \n WaitPeriod
                  is required only when ActionsSuppressor is specified."
                format: int64
                type: integer
              alarmActions:
                description: "The actions to execute when this alarm transitions to
                  the ALARM state from any other state. Each action is specified as
                  an Amazon Resource Name (ARN). \n Valid Values: arn:aws:sns:region:account-id:sns-topic-name
                  | arn:aws:ssm:region:account-id:opsitem:severity"
                items:
                  type: string
                type: array
              alarmDescription:
                description: The description for the composite alarm.
                type: string
              alarmName:
                description: The name for the composite alarm. This name must be unique
                  within the Region.
                type: string
              alarmRule:
                description: "An expression that specifies which other alarms are
                  to be evaluated to determine this composite alarm's state. For each
                  alarm that you reference, you designate a function that specifies
                  whether that alarm needs to be in ALARM state, OK state, or INSUFFICIENT_DATA
                  state. You can use operators (AND, OR and NOT) to combine multiple
                  functions in a single expression. You can use parenthesis to logically
                  group the functions in your expression. \n You can use either alarm
                  names or ARNs to reference the other alarms that are to be evaluated.
                  \n Functions can include the following: \n * ALARM(\"alarm-name
                  or alarm-ARN\") is TRUE if the named alarm is in ALARM state. \n
                  * OK(\"alarm-name or alarm-ARN\") is TRUE if the named alarm is
                  in OK state. \n * INSUFFICIENT_DATA(\"alarm-name or alarm-ARN\")
                  is TRUE if the named alarm is in INSUFFICIENT_DATA state. \n * TRUE
                  always evaluates to TRUE. \n * FALSE always evaluates to FALSE.
                  \n TRUE and FALSE are useful for testing a complex AlarmRule structure,
                  and for testing your alarm actions. \n Alarm names specified in
                  AlarmRule can be surrounded with double-quotes (\"), but do not
                  have to be. \n The following are some examples of AlarmRule: \n
                  * ALARM(CPUUtilizationTooHigh) AND ALARM(DiskReadOpsTooHigh) specifies
                  that the composite alarm goes into ALARM state only if both CPUUtilizationTooHigh
                  and DiskReadOpsTooHigh alarms are in ALARM state. \n * ALARM(CPUUtilizationTooHigh)
                  AND NOT ALARM(DeploymentInProgress) specifies that the alarm goes
                  to ALARM state if CPUUtilizationTooHigh is in ALARM state and DeploymentInProgress
                  is not in ALARM state. This example reduces alarm noise during a
                  known deployment window. \n * (ALARM(CPUUtilizationTooHigh) OR ALARM(DiskReadOpsTooHigh))
                  AND OK(NetworkOutTooHigh) goes into ALARM state if CPUUtilizationTooHigh
                  OR DiskReadOpsTooHigh is in ALARM state, and if NetworkOutTooHigh
                  is in OK state. This provides another example of using a composite
                  alarm to prevent noise. This rule ensures that you are not notified
                  with an alarm action on high CPU or disk usage if a known network
                  problem is also occurring. \n The AlarmRule can specify as many
                  as 100 \"children\" alarms. The AlarmRule expression can have as
                  many as 500 elements. Elements are child alarms, TRUE or FALSE statements,
                  and parentheses."
                type: string
              insufficientDataActions:
                description: "The actions to execute when this alarm transitions to
                  the INSUFFICIENT_DATA state from any other state. Each action is
                  specified as an Amazon Resource Name (ARN). \n Valid Values: arn:aws:sns:region:account-id:sns-topic-name"
                items:
                  type: string
                type: array
              oKActions:
                description: "The actions to execute when this alarm transitions to
                  an OK state from any other state. Each action is specified as an
                  Amazon Resource Name (ARN). \n Valid Values: arn:aws:sns:region:account-id:sns-topic-name"
                items:
                  type: string
                type: array
              tags:
                description: "A list of key-value pairs to associate with the composite
                  alarm. You can associate as many as 50 tags with an alarm. \n Tags
                  can help you organize and categorize your resources. You can also
                  use them to scope user permissions, by granting a user permission
                  to access or change only resources with certain tag values."
                items:
                  description: A key-value pair associated with a CloudWatch resource.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            required:
            - alarmName
            - alarmRule
            type: object
          status:
            description: CompositeAlarmStatus defines the observed state of CompositeAlarm
            properties:
              ackResourceMetadata:
                description: All CRs managed by ACK have a common `Status.ACKResourceMetadata`
                  member that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: 'ARN is the Amazon Resource Name for the resource.
                      This is a globally-unique identifier and is set only by the
                      ACK service controller once the controller has orchestrated
                      the creation of the resource OR when it has verified that an
                      "adopted" resource (a resource where the ARN annotation was
                      set by the Kubernetes user on the CR) exists and matches the
                      supplied CR''s Spec field values. TODO(vijat@): Find a better
                      strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270'
                    type: string
                  ownerAccountID:
                    description: OwnerAccountID is the AWS Account ID of the account
                      that owns the backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: All CRS managed by ACK have a common `Status.Conditions`
                  member that contains a collection of `ackv1alpha1.Condition` objects
                  that describe the various terminal states of the CR and its backend
                  AWS service API resource
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
